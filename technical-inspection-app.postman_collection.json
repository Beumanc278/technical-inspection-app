{
	"info": {
		"_postman_id": "fb3d1c66-1256-4f8f-acf6-4914ccdfaa71",
		"name": "technical-inspection-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "/services",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/services",
					"host": [
						"{{url}}"
					],
					"path": [
						"services"
					]
				}
			},
			"response": []
		},
		{
			"name": "/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "/inspections",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/inspections",
					"host": [
						"{{url}}"
					],
					"path": [
						"inspections"
					]
				}
			},
			"response": []
		},
		{
			"name": "/car - insert new",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"car-id\": null,\r\n            \"car-brend\": \"Hyundai\",\r\n            \"car-model\": \"GS300\",\r\n            \"car-year\": 2006,\r\n            \"car-engine-type\": \"Бензин\",\r\n            \"car-engine-capacity\": 3.0,\r\n            \"car-transmission\": \"АКПП\",\r\n            \"car-drive-unit\": \"Задний\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/car",
					"host": [
						"{{url}}"
					],
					"path": [
						"car"
					]
				}
			},
			"response": []
		},
		{
			"name": "/car - update existed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"New model value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['car-parameters']['car-model']).to.eql('Solaris');\r",
							"});\r",
							"\r",
							"pm.test(\"New year value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['car-parameters']['car-year']).to.eql(2010)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"car-id\": 10,\r\n            \"car-brend\": \"Hyundai\",\r\n            \"car-model\": \"Solaris\",\r\n            \"car-year\": 2010,\r\n            \"car-engine-type\": \"Бензин\",\r\n            \"car-engine-capacity\": 3.0,\r\n            \"car-transmission\": \"АКПП\",\r\n            \"car-drive-unit\": \"Задний\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/car",
					"host": [
						"{{url}}"
					],
					"path": [
						"car"
					]
				}
			},
			"response": []
		},
		{
			"name": "/car - filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"car-id\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/car",
					"host": [
						"{{url}}"
					],
					"path": [
						"car"
					]
				}
			},
			"response": []
		},
		{
			"name": "/car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"car-id\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/car",
					"host": [
						"{{url}}"
					],
					"path": [
						"car"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user - insert new",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user-id\": null,\r\n    \"username\": \"Малюгина Полина\",\r\n    \"car-id\": 7\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user - update existed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"New username value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['user-parameters']['username']).to.eql('Анурина Полина');\r",
							"});\r",
							"\r",
							"pm.test(\"New car id value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['user-parameters']['car-id']).to.eql(8)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user-id\": 3,\r\n    \"username\": \"Анурина Полина\",\r\n    \"car-id\": 8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user - filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user-id\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user-id\": 3\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/service - insert new",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n            \"service-id\": null,\r\n            \"service-name\": \"Service name 10\",\r\n            \"service-description\": \"Service description 10\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/service",
					"host": [
						"{{url}}"
					],
					"path": [
						"service"
					]
				}
			},
			"response": []
		},
		{
			"name": "/service - update existed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"New service name value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['service-parameters']['service-name']).to.eql('New name 10');\r",
							"});\r",
							"\r",
							"pm.test(\"New service description value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['service-parameters']['service-description']).to.eql(\"New description 10\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n            \"service-id\": 6,\r\n            \"service-name\": \"New name 10\",\r\n            \"service-description\": \"New description 10\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/service",
					"host": [
						"{{url}}"
					],
					"path": [
						"service"
					]
				}
			},
			"response": []
		},
		{
			"name": "/service - filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"service-id\": 6\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/service",
					"host": [
						"{{url}}"
					],
					"path": [
						"service"
					]
				}
			},
			"response": []
		},
		{
			"name": "/service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"service-id\": 6\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/service",
					"host": [
						"{{url}}"
					],
					"path": [
						"service"
					]
				}
			},
			"response": []
		},
		{
			"name": "/inspection - insert new",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"inspection-id\": null,\r\n        \"inspection-name\": \"New inspection name\",\r\n        \"inspection-cost\": 9999,\r\n        \"inspection-mileage\": 100000,\r\n        \"inspection-lifetime\": 10,\r\n        \"inspection-service-id\": 4,\r\n        \"inspection-car-parameters\": {\r\n            \"car-id\": 9,\r\n            \"car-brend\": \"ВАЗ\",\r\n            \"car-model\": \"2106\",\r\n            \"car-year\": 1998,\r\n            \"car-engine-type\": \"Бензин\",\r\n            \"car-engine-capacity\": 1.6,\r\n            \"car-transmission\": \"МКПП\",\r\n            \"car-drive-unit\": \"Задний\"\r\n        }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/inspection",
					"host": [
						"{{url}}"
					],
					"path": [
						"inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "/inspection - update existed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"New inspection name value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['inspection-parameters']['inspection-name']).to.eql('Updated inspection name');\r",
							"});\r",
							"\r",
							"pm.test(\"New cost value is set\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['inspection-parameters']['inspection-cost']).to.eql(1234)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"inspection-id\": 34,\r\n        \"inspection-name\": \"Updated inspection name\",\r\n        \"inspection-cost\": 1234,\r\n        \"inspection-mileage\": 100000,\r\n        \"inspection-lifetime\": 10,\r\n        \"inspection-service-id\": 5,\r\n        \"inspection-car-parameters\": {\r\n            \"car-id\": 9,\r\n            \"car-brend\": \"ВАЗ\",\r\n            \"car-model\": \"2106\",\r\n            \"car-year\": 1998,\r\n            \"car-engine-type\": \"Бензин\",\r\n            \"car-engine-capacity\": 1.6,\r\n            \"car-transmission\": \"МКПП\",\r\n            \"car-drive-unit\": \"Задний\"\r\n        }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/inspection",
					"host": [
						"{{url}}"
					],
					"path": [
						"inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "/inspection - filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inspection-id\": 34\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/inspection",
					"host": [
						"{{url}}"
					],
					"path": [
						"inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "/inspection",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inspection-id\": 34\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/inspection",
					"host": [
						"{{url}}"
					],
					"path": [
						"inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "/car - just for dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/car",
					"host": [
						"{{url}}"
					],
					"path": [
						"car"
					]
				}
			},
			"response": []
		},
		{
			"name": "/service - just for dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/service",
					"host": [
						"{{url}}"
					],
					"path": [
						"service"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user - just for dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/inspection - just for dev",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/inspection",
					"host": [
						"{{url}}"
					],
					"path": [
						"inspection"
					]
				}
			},
			"response": []
		}
	]
}